uniform mat4 v;
uniform mat4 p;

out vec4 vColor;

out vec3 vPosition;
out vec3 vNormal;
out vec2 vCoord;
out vec3 vCamera;
out vec2 vStartCoord;

void main(){
  const uint mapping[] = {0,1,2,2,1,3};
  uint quadVertexId = mapping[gl_VertexID%6];
  uint faceId = gl_VertexID/6;
  float size = 1;
  vec4 position = vec4(size*(-1+2*vec2(quadVertexId%2,quadVertexId/2)),0,1);
  gl_Position = p * (v * position);


  vec2 coord = vec2(quadVertexId%2,quadVertexId/2);
  vec3 camera = (inverse(v)*vec4(0,0,0,1)).xyz;

  vPosition = position.xyz;
  vNormal = vec3(0,0,1);
  vCoord  = vec2(quadVertexId%2,quadVertexId/2);
  vCamera = camera;

  vStartCoord = (position.xy+(camera.xy-position.xy)*.01/(position.z-camera.z))*.5+.5;

  if(faceId == 0)
    vColor = vec4(1,0,0,.5);
  else if(faceId == 1)
    vColor = vec4(0,1,0,.3);
  else
    vColor = vec4(0,0,1,.4);
}
